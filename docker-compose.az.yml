services:
  # PostgreSQL Database
  postgres:
    image: legacyuse.azurecr.io/legacy-use-db:latest
    networks:
      - caddy_net
    container_name: legacy-use-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    env_file:
      - .env
    profiles: ["default"]

  # Backend Service
  backend:
    image: legacyuse.azurecr.io/legacy-use-backend:latest
    networks:
      - caddy_net
    container_name: legacy-use-backend
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8088:8088"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env
    profiles: ["default"]

  # Frontend Service
  frontend:
    image: legacyuse.azurecr.io/legacy-use-frontend:latest
    networks:
      - caddy_net
    container_name: legacy-use-frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: unless-stopped
    env_file:
      - .env
    profiles: ["default"]

  gnucashvm:
    image: legacyuse.azurecr.io/target-machine-gnucash:latest
    networks:
      - caddy_net
    container_name: gnucashvm
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5900:5900"
    volumes:
      - linux-home:/home/developer
      - linux-workspace:/workspace
      - /dev/shm:/dev/shm
    working_dir: /workspace
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 3s
      timeout: 2s
      retries: 10
    profiles: ["default"]

  target-session:
    image: legacyuse.azurecr.io/legacy-use-target:local
    profiles: ["pull-only"]

volumes:
  postgres_data:
  linux-home:
  linux-workspace:
networks:
  caddy_net:
    external: true
